services:
  # ---------- Databases ----------
  postgres:
    image: postgres:15
    container_name: pg
    restart: unless-stopped
    environment:
      POSTGRES_DB: shop
      POSTGRES_USER: shop
      POSTGRES_PASSWORD: shop
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: >
      postgres -c wal_level=logical
               -c max_wal_senders=10
               -c max_replication_slots=10

  mongo:
    image: mongo:4.4
    container_name: mongo
    restart: unless-stopped
    ports: ["27017:27017"]
    volumes:
      - mongodata:/data/db

  # ---------- Search ----------
  opensearch:
    image: opensearchproject/opensearch:2.14.0
    container_name: opensearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true     # —É–ø—Ä–æ—â–∞–µ–º –¥–ª—è –∫—É—Ä—Å–∞
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=Gangball08!
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch-data:/usr/share/opensearch/data

  # ---------- Kafka ----------
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports: ["2181:2181"]

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    restart: unless-stopped
    stop_grace_period: 20s
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
#    logging:
#      driver: loki
#      options:
#        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"
#        mode: non-blocking
#        max-buffer-size: 4m

  # ---------- Analytics ----------
#  clickhouse:
#    image: clickhouse/clickhouse-server:24.2
#    container_name: clickhouse
#    restart: unless-stopped
#    ports: ["9000:9000", "8123:8123"]

  review-analyser:
    build: ./review-analyser
    environment:
      - KAFKA_BOOTSTRAP=${KAFKA_BOOTSTRAP}
      - KAFKA_TOPIC=review-created
      - TARGET=os
      - OS_HOST=${OPENSEARCH_HOST}
      - OS_PORT=${OPENSEARCH_PORT}
      - PROM_PORT=8000
    depends_on:
      - kafka
      - opensearch

  # ---------- Observability ----------
  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports: ["9090:9090"]

  grafana:
    image: grafana/grafana:11.0.0
    container_name: grafana
    restart: unless-stopped
    ports: ["3000:3000"]
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafanadata:/var/lib/grafana

  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    ports: ["3100:3100"]

#  jaeger:
#    image: jaegertracing/all-in-one:1.58
#    container_name: jaeger
#    restart: unless-stopped
#    ports:
#      - "16686:16686"
#      - "14250:14250"
#      - "9411:9411"
#    environment:
#      - COLLECTOR_ZIPKIN_HOST_PORT=:9411


  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    restart: unless-stopped
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock  # üëà –í–ê–ñ–ù–û
      - ./observability/promtail-config.yaml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml

#  otel-collector:
#    image: otel/opentelemetry-collector-contrib:0.99.0
#    container_name: otel-collector
#    command: [ "--config=/etc/otel-collector-config.yml" ]
#    volumes:
#      - ./observability/otel-collector-config.yml:/etc/otel-collector-config.yml:ro
#    ports:
#      - "4317:4317"   # OTLP gRPC
#    restart: unless-stopped

  dashboards:
    image: opensearchproject/opensearch-dashboards:2.14.0
    container_name: opensearch-dashboards
    ports:
      - "5601:5601"
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    depends_on:
      - opensearch

  # ---------- Services (Python stubs) ----------
  shop:
    build: ./shop
    restart: unless-stopped
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    environment:
      - POSTGRES_URL=${POSTGRES_URL}
      - KAFKA_BOOTSTRAP=${KAFKA_BOOTSTRAP}
      - OPENSEARCH_URL=${OPENSEARCH_URL}
      - OPENSEARCH_HOST=${OPENSEARCH_HOST}
      - OPENSEARCH_PORT=${OPENSEARCH_PORT}
      - OPENSEARCH_USE_SSL=${OPENSEARCH_USE_SSL}
      - OPENSEARCH_VERIFY_CERTS=${OPENSEARCH_VERIFY_CERTS}
      - OPENSEARCH_INDEX=${OPENSEARCH_INDEX}
      - MONGO_URL=${MONGO_URL}
      - KAFKA_BOOTSTRAP=${KAFKA_BOOTSTRAP}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
    depends_on:
      - mongo
      - postgres
      - kafka
    ports: ["8000:8000"]
    logging:
      driver: loki
      options:
        loki-url: "http://host.docker.internal:3100/loki/api/v1/push"
        mode: non-blocking
        max-buffer-size: 4m


  kafka-connect:
    build:
      context: ./kafka-connect
    image: kafka-connect-custom
    container_name: kafka-connect
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - opensearch
    restart: unless-stopped
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "connect-cluster"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_PLUGIN_PATH: "/usr/share/confluent-hub-components,/usr/share/confluent-hub-components/opensearch-connector-for-apache-kafka,/usr/share/java,/usr/local/share/kafka/plugins"


volumes:
  pgdata:
  mongodata:
  grafanadata:
  opensearch-data:
